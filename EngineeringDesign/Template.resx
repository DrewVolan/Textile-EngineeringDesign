<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>